apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: fileserver
    app.kubernetes.io/instance: trains-server
    app.kubernetes.io/version: 0.10.1-1
    app.kubernetes.io/part-of: trains-server
    trains: fileserver
    platform: trains
  name: fileserver
  namespace: {{ .Values.trains.namespace }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fileserver
      app.kubernetes.io/instance: trains-server
      app.kubernetes.io/version: 0.10.1-1
      app.kubernetes.io/part-of: trains-server
      trains: fileserver
      platform: trains
  progressDeadlineSeconds: 5
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fileserver
        app.kubernetes.io/instance: trains-server
        app.kubernetes.io/version: 0.10.1-1
        app.kubernetes.io/part-of: trains-server
        trains: fileserver
        platform: trains
    spec:
      containers:
      - image: {{ .Values.trains.image.repository }}:{{ .Values.trains.image.tag }}
        name: fileserver
        resources:
          requests:
            memory: "30M"
            cpu: "50m"
          limits:
            memory: "60M"
            cpu: "100m"
        args:
        - fileserver
        volumeMounts:
        - mountPath: /var/log/trains
          name: fileserver-hostpath0
        - mountPath: /mnt/fileserver
          name: fileserver-hostpath1
      restartPolicy: Always
      nodeSelector:
        {{ .Values.trains.nodeSelector}}
      volumes:
      - name: fileserver-hostpath0
        hostPath:
          path: /var/log/trains
      - name: fileserver-hostpath1
        hostPath:
          path: /mnt/fileserver